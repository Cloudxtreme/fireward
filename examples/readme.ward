type User = {
  name: {first: string, last: string}, // inline child objects
  friends: string[], // a list of strings
  age: int,
  contact?: Phone | Email // a union type
  id: const string // will reject updates
} 
type Phone = {number: int, country: int}
type Email = string

function isUser(userId) { 
  // return keyword optional
  request.auth!=null && request.auth.uid == userId; 
}

match /users/{userId} is User { 
  // read, write, create, update, and delete conditions are allowed
  allow read: if isUser(userId);
  allow create: if isUser(userId);
  allow update: if isUser(userId);
  allow delete: if isUser("admin");
}
